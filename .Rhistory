library(swirl)rm(list=ls())
rm(list=ls())
library(swirl)
swirl()
dice_sqr
sum(dice_sqr*pdf
)
sum(dice_sqr*dice_fair)
ex2_fair<-sum(dice_sqr*dice_fair)
ex2_fair-3.5^2
sum(dice_high*dice_sqr)-edh^2
sd(apply(matrix(rnorm(10000),1000),1,mean))
s/sqrt(n)
1/sqrt(n)
1/sqrt(10)
1/sqrt(120)
sd(apply(matrix(runif(10000),1000),1,mean))
2/sqrt(10)
sd(apply(matrix(rpois(10000,4),1000),1,mean))
1/(2*sqrt(10))
sd(apply(matrix(sample(0:1,10000,TRUE),1000),1,mean))
swirl()
choose(5,3)*0.8^3*0.2^2
choose(5,3)*0.8^3*0.2^2+choose(5,4)*0.8^4*0.2^1+choose(5,5)*0.8^5*0.2^0
pbinom(q = 2,size = 5,prob = .8,lower.tail = FALSE)
qnorm(.1)
0
qnorm(97.5,mean = 3,sd = 2)
qnorm(.975,mean = 3,sd = 2)
1.96*2+3
pnorm(q = 1200,mean=1020,sd-50)
pnorm(q = 1200,mean=1020,sd=50)
pnorm(q = 1200,mean=1020,sd=50,lower.tail = FALSE)
pnorm((1200-1020)/50)
pnorm((1200-1020)/50,lower.tail = FALSE)
qnorm(.75,mean=1020,sd=50)
.53
.53
ppois(3,2.5*4)
pbinom(5,size = 1000,prob = 0.01)
ppois(5,lambda = 1000*0,01)
ppois(5,lambda = 1000*0.01)
coinPlot(10)
coinPlot(10000)
ymax
upgrade.packages()
update.packages()
swirl()
upgrade.packages()
update.packages()
swirl()
update.packages()
update.packages()
lirary(swirl)
library(swirl)
swirl()
install.packages("stringi")
swirl()
library(swirl)
swirl()
install_from_swirl("Statistical_Inference")
install_from_swirl("Statistical Inference")
library(curl)
install.packages("curl")
library(curl)
swirl()
swirl()
coinPlot(10)
coinPlot(1000)
coinPlot(10000)
qnorm(p = .95)
.6+c(-1,1)*qnorm(.975)*sqrt(.6(1-.6/100))
.6+c(-1,1)*qnorm(.975)*sqrt(.6((1-.6)/100))
.6+c(-1,1)*qnorm(.975)*sqrt(.6(1-.6)/100)
1
.6+c(-1,1)*qnorm(.975)*sqrt(.6*.4/100)
x$conf.int
0
binom.test(60,100)$conf.int
mywald(p = .2)
ACCompar(20)
lamb=94.32/5
lamb<-94.32/5
lamb<-5/94.32
lamb + c(-1,1)*qnorm(.975)*sqrt(lamb/5)
lamb + c(-1,1)*qnorm(.975)*sqrt(lamb/94.32)
poisson.test(5,94.32)
poisson.test(5,94.32)$conf
qnorm(p = 70,mean = 80,sd = 10,lower.tail = FALSE)
pnorm(p = 70,mean = 80,sd = 10,lower.tail = FALSE)
pnorm(q = 1200,mean=1020,sd=50,lower.tail = FALSE)
pnorm(p = 70,mean = 80,sd = 10)
pnorm(q = 70,mean = 80,sd = 10)
qnorm(.95,mean=1100,sd=75)
choose(5,4)*0.5^4*0.5^1+choose(5,5)*0.5^5*0.5^0
poisson.test(5,1)$conf
ppois(q = 10,lambda = 5)
1-ppois(q = 10,lambda = 5)
1-ppois(q = 10,lambda = 5*3)
ppois(q = 10,lambda = 5*3)
1100+75
1100+150
75/10
1100+7.5*.95
1100+7.5*1.645
qnorm(.95,mean=1100,sd=75)
qnorm(.95,mean=1100,sd=75/sqrt(100))
qnorm(.95,mean=1100,sd=75/sqrt(10000))
qnorm(.95,mean=1100,sd=75/sqrt(10000000000))
library(swirl)
swirl()
install_from_swirl("Regression_Models")
swirl()
fit <- lm(y ~ x, out2)
plot(fit, which=1)
fitno <- lm(y ~ x, out2[-1])
fitno <- lm(y ~ x, out2[-1,])
plot(fitno, which=1)
coef(fit)-coef(fitno)
head(dfbeta(fit))
resno <- out2[1, "y"] - predict(fitno, out2[1,])
1-resid(fit)[1]/resno
head(hatvalues(fit))
0
sigma <- sqrt(deviance(fit)/df.residual(fit))
0
rstd <- resid(fit)/(sigma * sqrt(1-hatvalues(fit)))
head(cbind(rstd, rstandard(fit)))
plot(fit, which=3)
plot(fit, which=2)
0
sigma1 <- sqrt(deviance(fitno)/df.residual(fitno))
resid(fit)[1]/(sigma1*sqrt(1-hatvalues(fit)[1]))
rstudent(fit)[1]
head(rstudent(fit))
0
dy <- predict(fitno, out2)-predict(fit, out2)
0
sum(dy^2)/(2*sigma^2)
plot(fit, which=5)
library(swirl)
rm(list=ls())
library(swirl)
swirl()
options(editor = "internal")
swirl()
rgp1()
rgp2()
head(swiss)
mdl<-lm(Fertility~Agriculture+Examination+Education+Catholic+Infant.Mortality,swiss)
vif(mdl)
mdl2<-lm(Fertility~Agriculture+Education+Catholic+Infant.Mortality,swiss)
vif(mdl2)
simbias()
x1c<-simbias()
Using apply(x1c, 1, mean)
apply(x1c, 1, mean)
fit1<-lm(Fertility~Agriculture,swiss)
fit3<-lm(Fertility~Agriculture+Examination+Education,swiss)
anova(fit1,fit3)
deviance(fit3)
d<-deviance(fit3)/43
n<-(deviance(fit1)-deviance(fit3))/2
n/d
pf(n/d, 2, 43, lower.tail=FALSE)
shapiro.test(fit3$residuals)
anova(fit1, fit3, fit5, fit6)
ravenData
mdl<-glm(revenWinNum~ravenScore,family="binomial",data=ravenData)
mdl<-glm(ravenWinNum~ravenScore,family="binomial",data=ravenData)
predict(mdl, data.frame(ravenScore=c(0, 3,
6)))
lodds<-predict(mdl, data.frame(ravenScore=c(0, 3, 6)))
exp(lodds)/(1+exp(lodds))
summary(mdl)
exp(confint(mdl))
anova(mdl)
qchisq(0.95, 1)
var(rpois(1000, 50))
nxt()
head(hits)
class(hits[,'date'])
as.integer(head(hits[,'date']))
mdl <- glm(visits ~ date, poisson, hits)
summary(mdl)
exp(confint(mdl,'date'))
which.max(hits[,'visits'])
hits[704,]
lambda<-mdl$fitted.values[704]
qpois(.95, lambda)
mdl2<-log(visits+1)
0
mdl2 <- glm(formula = simplystats ~ date, family = poisson, data = hits,offset = log(visits + 1))
qpois(.95, mdl2$fitted.values[704])
library(MASS)
?shuttle
head (shuttle)
library(MASS)
fit1<-glm(use~wind,data = shuttle,family="binomial")
summary(fit1)
summary(shuttle)
fit1<-glm(as.factor(use)~wind,data = shuttle,family="binomial")
summary(fit1)
summary(shuttle)
summary(shuttle$use)
dim(shuttle)
levels(shuttle$use)
summary(shuttle)
levels(shuttle$use)<-c(0,1)
levels(shuttle$use)
summary(shuttle)
fit1<-glm(use~wind,data = shuttle,family="binomial")
summary(fit1)
fit1<-glm(use~wind-1,data = shuttle,family="binomial")
summary(fit1)
summary(fit1)
fit1<-glm(use~wind-1,data = shuttle,family="binomial")
summary(fit1)
summary(fit1)$coef
exp(coef(fit))
exp(coef(fit1))
exp(coef(fit1))[1]
exp(coef(fit1))[1]/exp(coef(fit1))[2]
exp(coef(fit1))[2]/exp(coef(fit1))[1]
summary(fit1)$coef
fit1<-glm(use~wind,data = shuttle,family="binomial")
summary(fit1)
summary(fit1)$coef
exp(coef(fit1))[2]/exp(coef(fit1))[1]
fit1<-glm(use~wind-1,data = shuttle,family="binomial")
summary(fit1)
summary(fit1)$coef
exp(coef(fit1))[2]/exp(coef(fit1))[1]
fit1<-glm(use~wind,data = shuttle,family="binomial")
summary(fit1)
summary(fit1)$coef
exp(coef(fit1))[2]/exp(coef(fit1))[1]
fit1<-glm(use~wind-1,data = shuttle,family="binomial")
summary(fit1)
summary(fit1)$coef
exp(coef(fit1))[2]/exp(coef(fit1))[1]
fit1<-glm(use~as.factor(wind)-1,data = shuttle,family="binomial")
summary(fit1)
summary(fit1)$coef
exp(coef(fit1))[2]/exp(coef(fit1))[1]
1/0.969
fit1<-glm(use~as.factor(wind)-1,data = shuttle,family="binomial")
summary(fit1)
summary(fit1)$coef
exp(coef(fit1))[2]/exp(coef(fit1))[1]
summary(shuttle)
fit2<-glm(use~as.factor(wind)+as.factor(magn)-1,data = shuttle,family="binomial")
summary(fit2)
summary(fit2)$coef
exp(coef(fit2))[2]/exp(coef(fit2))[1]
fit3<-glm(I(1-use)~as.factor(wind)+as.factor(magn)-1,data = shuttle,family="binomial")
fit3<-glm(1-use~as.factor(wind)+as.factor(magn)-1,data = shuttle,family="binomial")
summary(shuttle)
fit3<-glm(1-as.numeric(use)~as.factor(wind)+as.factor(magn)-1,data = shuttle,family="binomial")
fit3<-glm((1-as.numeric(use))~as.factor(wind)+as.factor(magn)-1,data = shuttle,family="binomial")
shuttle$use<-as.numeric(shuttle$use=='auto')
fit3<-glm((1-as.numeric(use))~as.factor(wind)+as.factor(magn)-1,data = shuttle,family="binomial")
summary(fit3)$coef
fit2<-glm(use~as.factor(wind)+as.factor(magn)-1,data = shuttle,family="binomial")
library(MASS)
summary(shuttle)
shuttle$use<-as.numeric(shuttle$use=='auto')
summary(shuttle)
library(MASS)
summary(shuttle)
shuttle$use.binary <- as.integer(shuttle$use == "auto")
fit1<-glm(use~as.factor(wind)-1,data = shuttle,family="binomial")
summary(fit1)
summary(fit1)$coef
exp(coef(fit1))[2]/exp(coef(fit1))[1]
library(MASS)
summary(shuttle)
shuttle$use.binary <- as.integer(shuttle$use == "auto")
fit1<-glm(use~wind-1,data = shuttle,family="binomial")
summary(fit1)
summary(fit1)$coef
exp(coef(fit1))[2]/exp(coef(fit1))[1]
shuttle2<-shuttle
shuttle2$use2<-as.numeric(shuttle2$use=='auto')
fit<-glm(use2 ~ factor(wind) - 1, family = binomial, data = shuttle2)
library(MASS)
summary(shuttle)
levels(shuttle$use)<-c(0,1)
fit1<-glm(use~wind-1,data = shuttle,family="binomial")
fit1<-glm(use~as.factor(wind)-1,data = shuttle,family="binomial")
library(MASS)
summary(shuttle)
levels(shuttle$use)<-c(0,1)
fit1<-glm(use~as.factor(wind)-1,data = shuttle,family="binomial")
summary(shuttle)
library(MASS)
summary(shuttle)
library(MASS)
summary(shuttle)
shuttle$use.binary <- as.integer(shuttle$use == "auto")
fit1<-glm(use~wind-1,data = shuttle,family="binomial")
summary(fit1)
summary(fit1)$coef
exp(coef(fit1))[2]/exp(coef(fit1))[1]
summary(shuttle)
fit1<-glm(use.binary~wind-1,data = shuttle,family="binomial")
summary(fit1)
summary(fit1)$coef
exp(coef(fit1))[2]/exp(coef(fit1))[1]
exp(coef(fit1))[1]/exp(coef(fit1))[2]
summary(shuttle)
count(shuttle$use.binary)
sum(shuttle$use.binary)
fit2<-glm(use~as.factor(wind)+as.factor(magn)-1,data = shuttle,family="binomial")
summary(fit2)
summary(fit2)$coef
exp(coef(fit2))[1]/exp(coef(fit2))[2]
fit2<-glm(use.binary~as.factor(wind)+as.factor(magn)-1,data = shuttle,family="binomial")
summary(fit2)
summary(fit2)$coef
exp(coef(fit2))[1]/exp(coef(fit2))[2]
fit3<-glm((1-use.binary~as.factor(wind)+as.factor(magn)-1,data = shuttle,family="binomial")
summary(fit3)$coef
fit3<-glm((1-use.binary~wind+magn-1,data = shuttle,family="binomial")
fit3<-glm((1-use.binary~wind)+magn-1,data = shuttle,family="binomial")
summary(shuttle)
fit3<-glm((1-use.binary)~wind+magn-1,data = shuttle,family="binomial")
summary(fit3)$coef
fit2<-glm(use.binary~as.factor(wind)+as.factor(magn)-1,data = shuttle,family="binomial")
summary(fit2)
summary(fit2)$coef
summary(fit3)$coef
fit2<-glm(use.binary~wind+magn-1,data = shuttle,family="binomial")
summary(fit2)$coef
fit3<-glm((1-use.binary)~wind+magn-1,data = shuttle,family="binomial")
summary(fit3)$coef
InsectSprays
head(InsectSprays)
fit4~glm(count~as.factor(spray),data=InsectSprays,family=poisson)
summary(fit4)
fit4~glm(count~as.factor(spray),data=InsectSprays,family=poisson)
fit4~glm(count~as.factor(spray),data=InsectSprays,family="poisson"")
fit4~glm(count~as.factor(spray),data=InsectSprays,family="poisson")
fit4~glm(count~factor(spray),data=InsectSprays,family="poisson")
fit<- glm(count~factor(spray)-1,family="poisson",data=InsectSprays)
fit4<-glm(count~factor(spray),data=InsectSprays,family="poisson")
fit4<-glm(count~as.factor(spray),data=InsectSprays,family=poisson)
fit4<-glm(count~factor(spray)-1,data=InsectSprays,family=poisson)
summary(fit4)
summary(fit4)$coef
summary(fit4)$coef[1]/summary(fit4)$coef[2]
exp(summary(fit4)$coef[1]/summary(fit4)$coef[2])
exp(summary(fit4)$coef[1])/exp(summary(fit4)$coef[2])
log(10)
ln(10)
exp(log(10))
?offset
x <- -5:5
y <- c(5.12, 3.93, 2.67, 1.87, 0.52, 0.08, 0.93, 2.05, 2.54, 3.87, 4.97)
plot(x=x,y=y)
y6<-y[y>0]
y6
y6<-y[6:11]
y6
x6<-x[6:11]
y6<-y[6:11]
x6<-x[6:11]
fit6<-lm(y6~x6)
summary(fit6)
z <- (x > 0) * x
fit <- lm(y ~ x + z)
sum(coef(fit)[2:3])
summary(fit)
z
(x > 0)
x+z
y
mtcars
?mtcars
fitmt<-(mpg~am)
summary(fitmt)
fitmt<-lm(mpg~am)
fitmt<-lm(mpg~am,mtcars)
summary(fitmt)
fitmt<-lm(mpg~am-1,mtcars)
summary(fitmt)
fitmt<-lm(mpg~am,mtcars)
summary(fitmt)
library(ggplot2)
g<-ggplot(data=mtcars,aes(x=mpg,...))
?aes
g<-ggplot(data=mtcars,aes(x=wt,y=mpg,colour=am))
g<-ggplot(data=mtcars,aes(x=wt,y=mpg,colour=am))+geom_boxplot()
g
g<-ggplot(data=mtcars,aes(x=wt,y=mpg,group=am))+geom_boxplot()
g
g<-ggplot(data=mtcars,aes(x=wt,y=mpg,group=as.factor(am))+geom_boxplot()
g<-ggplot(data=mtcars,aes(x=wt,y=mpg,group=as.factor(am)+geom_boxplot()
g<-ggplot(data=mtcars,aes(x=wt,y=mpg,group=as.factor(am)))+geom_boxplot()
g
g<-ggplot(data=mtcars,aes(x=wt,group=as.factor(am)))+geom_boxplot()
g
g<-ggplot(data=mtcars,aes(x=wt,y=as.factor(am)))+geom_boxplot()
g
g<-ggplot(data=mtcars,aes(x=wt,y=am)+geom_boxplot()
g<-ggplot(data=mtcars,aes(x=wt,y=am))+geom_boxplot()
g
g<-ggplot(data=mtcars,aes(y=mpg,y=am))+geom_boxplot()
g
g<-ggplot(data=mtcars,aes(y=mpg,x=am))+geom_boxplot()
g
g<-ggplot(data=mtcars,aes(y=mpg,group=am))+geom_boxplot()
g
g<-ggplot(data=mtcars,aes(y=mpg,x=am,fill=))+geom_boxplot()
mtcars
names(mtcars)
g<-ggplot(data=mtcars,aes(y=mpg,x=am,fill=factor(cyl)))+geom_boxplot()
g
g<-ggplot(data=mtcars,aes(y=mpg,x=factor(am),fill=factor(cyl)))+geom_boxplot()
g
g<-ggplot(data=mtcars,aes(y=mpg,x=factor(am),fill=factor(cyl)))+geom_smooth()
g
g<-ggplot(data=mtcars,aes(y=mpg,x=factor(am),fill=factor(cyl)))+geom_point()
g
g<-ggplot(data=mtcars,aes(y=mpg,x=factor(am),colour=factor(cyl)))+geom_point()
g
g<-ggplot(data=mtcars,aes(y=mpg,x=disp,colour=factor(am)))+geom_point()
g
pairs(mpg~.,mtcars)
pairs(mpg~am+wt,mtcars)
pairs(mpg~am+wt,disp,mtcars)
pairs(mpg~am+wt+disp,mtcars)
g<-ggplot(data=mtcars,aes(y=mpg,x=disp,colour=factor(am)))+geom_point()
g
g<-ggplot(data=mtcars,aes(y=mpg,x=disp,colour=am))+geom_point()
g
g<-ggplot(data=mtcars,aes(y=mpg,x=disp,colour=factor(am))+geom_point()
g<-ggplot(data=mtcars,aes(y=mpg,x=disp,colour=factor(am)))+geom_point()+geom_smooth()
g
g<-ggplot(data=mtcars,aes(y=mpg,x=wt,colour=factor(am)))+geom_point()+geom_smooth()
g
g<-ggplot(data=mtcars,aes(y=mpg,x=wt,colour=factor(am)))+geom_point()+geom_abline()
g
pairs(mpg~.,mtcars)
dim(mtcars)
nrow(mtcars)
g<-ggplot(data=mtcars,aes(y=mpg,x=factor(am),fill=factor(cyl)))+geom_boxplot()
g
g<-ggplot(data=mtcars,aes(y=mpg,x=factor(am))+geom_boxplot()
g<-ggplot(data=mtcars,aes(y=mpg,x=factor(am)))+geom_boxplot()
g
g<-ggplot(data=mtcars,aes(y=mpg,x=factor(am)))+geom_point()
g
g<-ggplot(data=mtcars,aes(y=mpg,x=factor(am)))+geom_point()+jitter()
g<-ggplot(data=mtcars,aes(y=mpg,x=factor(am)))+geom_point()+jitter(x = am)
g<-ggplot(data=mtcars,aes(y=mpg,x=factor(am)))+geom_point()+jitter(x = mtcars$am)
g<-ggplot(data=mtcars,aes(y=mpg,x=factor(am)))+geom_point()+geom_smooth()
g
g<-ggplot(data=mtcars,aes(y=mpg,x=factor(am)))+geom_point()+geom_smooth()
g
g<-ggplot(data=mtcars,aes(y=mpg,x=factor(am)))+geom_point()+geom_smooth(method=lm)
g
g<-ggplot(data=mtcars,aes(y=mpg,x=wt)+geom_point()+geom_smooth(method=lm)
g<-ggplot(data=mtcars,aes(y=mpg,x=wt))+geom_point()+geom_smooth(method=lm)
g
g<-ggplot(data=mtcars,aes(y=mpg,x=factor(am)))+geom_point()+geom_smooth(method=lm)
g
g<-ggplot(data=mtcars,aes(y=mpg,x=am))+geom_point()+geom_smooth(method=lm)
g
data(mtcars)
summary(mtcars)
class(mtcars)
apply(mtcars,1,class)
apply(mtcars,2,class)
t.test(mtcars[mtcars$am=="Automatic","mpg"],mtcars[mtcars$am=="Manual","mpg"])
data(mtcars)
apply(mtcars,2,class)
mtcars$am <- as.factor(mtcars$am)
levels(mtcars$am) <- c("Automatic", "Manual")
t.test(mtcars[mtcars$am=="Automatic","mpg"],mtcars[mtcars$am=="Manual","mpg"])
tt<-t.test(mtcars[mtcars$am=="Automatic","mpg"],mtcars[mtcars$am=="Manual","mpg"])
tt
tt$statistic
tt$p.value
tt$parameter
tt$conf.int
tt$null.value
tt$method
tt$data.name
names(tt)
head(tt)
tt$estimate
pairs(mtcars,lower.panel = FALSE)
pairs(mtcars,lower.panel = FALSE)
pairs(mtcars,lower.panels = FALSE)
pairs(mtcars,lower.panel = FALSE)
pairs(mtcars,lower.panel = FALSE)
pairs(mtcars,lower.panel = NULL)
setwd("~/datascience/pmlproject")
library(caret)
install.packages("caret")
library(rpart)
library(randomforest)
install.packages("randomforest")
install.packages("randomForest")
library(rpart.plot)
library(randomForest)
library(rpart.plot)
library(rattle)
install.packages(c("rpart.plot","rattle"))
library(rpart.plot)
library(rattle)
